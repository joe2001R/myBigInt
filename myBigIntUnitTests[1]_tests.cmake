add_test([=[myBigInt.converting_from_dec_to_binary_21]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_dec_to_binary_21]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_dec_to_binary_21]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_from_bin_to_dec_21]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_bin_to_dec_21]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_bin_to_dec_21]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_from_dec_to_binary_0]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_dec_to_binary_0]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_dec_to_binary_0]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_from_bin_to_dec_0]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_bin_to_dec_0]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_bin_to_dec_0]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_from_dec_to_binary_32]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_dec_to_binary_32]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_dec_to_binary_32]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_from_bin_to_dec_32]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_bin_to_dec_32]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_bin_to_dec_32]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_from_dec_to_binary_7413]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_dec_to_binary_7413]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_dec_to_binary_7413]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_from_bin_to_dec_7413]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_from_bin_to_dec_7413]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_from_bin_to_dec_7413]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.converting_bin_string_to_vec_string]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.converting_bin_string_to_vec_string]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.converting_bin_string_to_vec_string]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.add_two_small_numbers]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.add_two_small_numbers]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.add_two_small_numbers]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.add_two_big_numbers]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.add_two_big_numbers]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.add_two_big_numbers]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.adding_zero_to_a_number]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.adding_zero_to_a_number]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.adding_zero_to_a_number]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.adding_a_small_negative_number_to_a_positive_number]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.adding_a_small_negative_number_to_a_positive_number]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.adding_a_small_negative_number_to_a_positive_number]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.adding_a_big_negative_number_to_a_positive_number]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.adding_a_big_negative_number_to_a_positive_number]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.adding_a_big_negative_number_to_a_positive_number]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.adding_a_negative_number_to_a_positive_number_of_same_size]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.adding_a_negative_number_to_a_positive_number_of_same_size]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.adding_a_negative_number_to_a_positive_number_of_same_size]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.substracting_same_number]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.substracting_same_number]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.substracting_same_number]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.adding_a_positive_number_to_a_negative_number_of_same_size]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.adding_a_positive_number_to_a_negative_number_of_same_size]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.adding_a_positive_number_to_a_negative_number_of_same_size]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.adding_a_small_positive_number_to_a_negative_number]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.adding_a_small_positive_number_to_a_negative_number]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.adding_a_small_positive_number_to_a_negative_number]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.adding_a_big_positive_number_to_a_negative_number]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.adding_a_big_positive_number_to_a_negative_number]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.adding_a_big_positive_number_to_a_negative_number]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.negating_a_positive_number]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.negating_a_positive_number]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.negating_a_positive_number]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.negating_a_positive_number_twice]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.negating_a_positive_number_twice]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.negating_a_positive_number_twice]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[myBigInt.substracting_two_numbers]=]  /home/joe/dev/myBigInt/myBigIntUnitTests [==[--gtest_filter=myBigInt.substracting_two_numbers]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[myBigInt.substracting_two_numbers]=]  PROPERTIES WORKING_DIRECTORY /home/joe/dev/myBigInt SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  myBigIntUnitTests_TESTS myBigInt.converting_from_dec_to_binary_21 myBigInt.converting_from_bin_to_dec_21 myBigInt.converting_from_dec_to_binary_0 myBigInt.converting_from_bin_to_dec_0 myBigInt.converting_from_dec_to_binary_32 myBigInt.converting_from_bin_to_dec_32 myBigInt.converting_from_dec_to_binary_7413 myBigInt.converting_from_bin_to_dec_7413 myBigInt.converting_bin_string_to_vec_string myBigInt.add_two_small_numbers myBigInt.add_two_big_numbers myBigInt.adding_zero_to_a_number myBigInt.adding_a_small_negative_number_to_a_positive_number myBigInt.adding_a_big_negative_number_to_a_positive_number myBigInt.adding_a_negative_number_to_a_positive_number_of_same_size myBigInt.substracting_same_number myBigInt.adding_a_positive_number_to_a_negative_number_of_same_size myBigInt.adding_a_small_positive_number_to_a_negative_number myBigInt.adding_a_big_positive_number_to_a_negative_number myBigInt.negating_a_positive_number myBigInt.negating_a_positive_number_twice myBigInt.substracting_two_numbers)
